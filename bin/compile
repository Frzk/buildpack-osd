#!/usr/bin/env bash
# usage: bin/compile <build_dir> <cache_dir> <env_dir>

cmnlib_url="https://github.com/Scalingo/cmnlib/raw/refs/tags/<version>/cmnlib.sh"

#if ! declare -F cmn::output::info >/dev/null; then
#	source /dev/stdin <<< \
#		"$( curl --silent --location --retry 3 "${cmnlib_url}" \
#		|| printf "echo ' ðŸ—™ Unable to load cmnlib, aborting.' >&2 && exit 1"; )"
#fi


build_dir="${1:-}"
cache_dir="${2:-}"
#env_dir="${3:-}"
base_dir="$( cd -P "$( dirname "${0}" )" && pwd )"
buildpack_dir="$( readlink -f "${base_dir}/.." )"
tmp_dir="$( mktemp --directory --tmpdir="/tmp" --quiet "bp-XXXXXX" )"

readonly build_dir
readonly cache_dir
#readonly env_dir
readonly base_dir
readonly buildpack_dir
readonly tmp_dir

# shellcheck disable=SC1091
source "${buildpack_dir}/cmnlib.sh"

# shellcheck disable=SC1091
source "${buildpack_dir}/VERSIONS"
# version=2.19.1
version="${OPENSEARCH_DASHBOARDS_VERSION:-"${OPENSEARCH_DASHBOARDS_DEFAULT_VERSION}"}"

archive="opensearch-dashboards-${version}.tar.gz"
file_url="https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/${version}/opensearch-dashboards-${version}-linux-x64.tar.gz"
hash_url="${file_url}.sig"
file_path="${tmp_dir}/${archive}"
hash_path="${tmp_dir}/${archive}.sig"
cache_file="${cache_dir}/${archive}"
require_download=0

# -----------------------------------------------------------------------------

cmn::main::start

if [ -z "${version}" ]; then
	cmn::step::fail
	cmn::output::err <<- EOM
		Unable to determine the OpenSearch Dashboards version to deploy.
		Please use the OPENSEARCH_DASHBOARDS_VERSION environment variable to
        specify the version to use.
		Aborting.
	EOM
	exit 11
fi

# -----------------------------------------------------------------------------

cmn::step::start "Installing OpenSearch Dashboards"

cmn::output::info "Using OpenSearch Dashboards version ${version}."

if [ -f "${cache_file}" ]; then
	cmn::output::info "Found matching file in cache."
	cmn::task::start "Downloading checksum"

	if ! cmn::file::download "${hash_url}" "${hash_path}"; then
		cmn::task::fail
		# Remove downloaded hash file:
		rm --force "${hash_path}"
		cmn::output::info <<- EOM
			Unable to download the checksum file.
			Falling back to re-downloading everything.
		EOM
	else
		cmn::task::finish

		cmn::task::start "Checking file validity"

		cmn::output::info "TEMP: Skipping"
		cmn::task::finish

		#if ! cmn::file::check_checksum "${cache_file}" "${hash_path}"; then
			#cmn::task::fail
			# File in cache does not seem valid, remove it, as well as the hash
			# file:
			#rm --force "${cache_file}"
			#rm --force "${hash_path}"
		#else
			# File is in cache, and valid.
			#cmn::task::finish
			#require_download=1
		#fi
	fi
fi

if [ $require_download -eq 0 ]; then
	cmn::task::start "Downloading OpenSearch Dashboards ${version}"

	#if ! cmn::file::download_and_check "${file_url}" "${hash_url}"\
	#								   "${file_path}" "${hash_path}"
	if ! cmn::file::download "${file_url}" "${file_path}"
	then
		cmn::task::fail "Could not safely download OpenSearch Dashboards ${version}!"
		cmn::step::fail
		exit 21
	fi

	cmn::task::finish

	cmn::task::start "Putting OpenSearch Dashboards ${version} in cache for later use"

	if ! mv "${file_path}" "${cache_file}"; then
		cmn::task::fail <<- EOM
			Unable to store ${archive} in the cache!
			Aborting.
		EOM
		cmn::step::fail
		exit 22
	fi

	cmn::task::finish
fi

# From this point we have a valid file in cache.

cmn::task::start "Extracting"
if ! tar --extract --file="${cache_file}" --directory="${tmp_dir}" 2>/dev/null
then
	cmn::task::fail <<- EOM
		An error occured while extracting the archive.
		Aborting.
	EOM
	cmn::step::fail
	exit 31
fi
cmn::task::finish

cmn::task::start "Installing"
if ! mv "${tmp_dir}/opensearch-dashboards-${version}/"* \
		--target-directory="${build_dir}" 2>/dev/null
then
	cmn::task::fail <<- EOM
		An error occured while installing the files.
		Aborting.
	EOM
	cmn::step::fail
	exit 32
fi
cmn::task::finish

cmn::step::finish

# -----------------------------------------------------------------------------

cmn::step::start "Building Environment"

export PATH="${build_dir}/bin:${PATH}"

cmn::task::start "Copying profile.d script"

mkdir --parents "${build_dir}/.profile.d"

if ! cp "${buildpack_dir}/files/profile.d/050-opensearch-dashboards.sh" \
	"${build_dir}/.profile.d/"
then
	cmn::task::fail
fi

cmn::task::finish

cmn::step::finish

# -----------------------------------------------------------------------------

#cmn::step::start "Installing Plugins"

#if [ ! -e "${GRAFANA_PLUGINS}" ]; then
#	OLD_IFS=${IFS}
#	IFS=','

#	plugin_dir="${build_dir}/plugins"
#	mkdir --parents "${plugin_dir}"

#	for plugin in ${GRAFANA_PLUGINS}; do
#		cmn::task::start "Installing ${plugin}"

#		if ! "${build_dir}/bin/grafana" cli --pluginsDir="${plugin_dir}" \
#				plugins install "${plugin}" >/dev/null
#		then
#			cmn::task::fail <<- EOM
#				An error occured while installing plugin "${plugin}". Going on.
#			EOM
#		else
#			cmn::task::finish
#		fi
#	done

#	IFS=${OLD_IFS}
#fi

#cmn::step::finish

# -----------------------------------------------------------------------------

cmn::step::start "Cleaning up"

cmn::task::start "Removing temporary files"
rm --recursive --force "${tmp_dir}"
cmn::task::finish

cmn::step::finish


cmn::main::finish
